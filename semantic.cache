;; Object semantic.cache
;; SEMANTICDB Tags save file
(semanticdb-project-database "semantic.cache"
  :file "semantic.cache"
  :tables (list 
   (semanticdb-table "package.el"
    :file "package.el"
    :pointmax 12427
    :major-mode 'emacs-lisp-mode
    :tokens '(("load-file" code nil [101 151]) ("color-theme" include nil nil nil [152 174]) ("color-theme-dark-blue" code nil [175 198]) ("add-to-list" code nil [338 386]) ("point-undo" include nil nil nil [387 408]) ("global-set-key" code nil [409 446]) ("global-set-key" code nil [447 485]) ("load-file" code nil [597 657]) ("cal-china-x" include nil nil nil [658 680]) ("load-file" code nil [784 844]) ("goto-last-change" include nil nil nil [845 872]) ("global-set-key" code nil [873 921]) ("xcscope" include nil nil nil [1001 1019]) ("setq" code nil [1091 1124]) ("doxymacs" include nil nil nil [1125 1144]) ("add-hook" code nil [1145 1190]) ("add-to-list" code nil [1283 1330]) ("dictionary-search" function nil nil ((use-visible . t) (prototype . t)) "Ask for a word and search it in all dictionaries" nil [1331 1428]) ("dictionary-match-words" function nil nil ((use-visible . t) (prototype . t)) "Ask for a word and search all matching words in the dictionaries" nil [1429 1547]) ("dictionary-lookup-definition" function nil nil ((use-visible . t) (prototype . t)) "Unconditionally lookup the word at point." nil [1548 1649]) ("dictionary" function nil nil ((use-visible . t) (prototype . t)) "Create a new dictionary buffer" nil [1650 1722]) ("dictionary-mouse-popup-matching-words" function nil nil ((use-visible . t) (prototype . t)) "Display entries matching the word at the cursor" nil [1723 1839]) ("dictionary-popup-matching-words" function nil nil ((use-visible . t) (prototype . t)) "Display entries matching the word at the point" nil [1840 1949]) ("dictionary-tooltip-mode" function nil nil ((use-visible . t) (prototype . t)) "Display tooltips for the current word" nil [1950 2042]) ("global-dictionary-tooltip-mode" function nil nil ((use-visible . t) (prototype . t)) "Enable/disable dictionary-tooltip-mode for all buffers" nil [2043 2159]) ("global-set-key" code nil [2176 2219]) ("global-set-key" code nil [2220 2268]) ("setq" code nil [2299 2335]) ("add-to-list" code nil [2415 2461]) ("weblogger" include nil nil nil [2462 2482]) ("load-file" code nil [2562 2613]) ("my-c-mode-common-hook" function nil nil nil (c-set-offset (quote substatement-open) 0) nil [2640 2894]) ("add-hook" code nil [2895 2948]) ("my-csharp-mode-hook" function nil nil nil (progn (turn-on-font-lock) (auto-fill-mode) (setq tab-width 4) (define-key csharp-mode-map "	" (quote c-tab-indent-or-complete))) nil [2949 3117]) ("add-hook" code nil [3118 3167]) ("add-to-list" code nil [3247 3289]) ("load-file" code nil [3290 3333]) ("global-set-key" code nil [3334 3380]) ("global-set-key" code nil [3381 3431]) ("global-set-key" code nil [3432 3482]) ("global-set-key" code nil [3483 3535]) ("global-set-key" code nil [3572 3614]) ("global-set-key" code nil [3615 3661]) ("move-line" function nil ("&optional" "n") ((user-visible . t)) "Move current line N (1) lines up/down leaving point in place." nil [3663 3953]) ("move-line-up" function nil ("n") ((user-visible . t)) "Moves current line N (1) lines up leaving point in place." nil [3954 4094]) ("move-line-down" function nil ("n") ((user-visible . t)) "Moves current line N (1) lines down leaving point in place." nil [4096 4235]) ("add-to-list" code nil [4315 4377]) ("yasnippet-bundle" include nil nil nil [4378 4405]) ("appt-activate" code nil [4485 4500]) ("setq" code nil [4501 4535]) ("setq" code nil [4569 4600]) ("setq" code nil [4601 4632]) ("setq" code nil [4713 4773]) ("org-install" include nil nil nil [4774 4796]) ("add-to-list" code nil [4861 4915]) ("define-key" code nil [4916 4963]) ("eval-after-load" code nil [4964 5753]) ("eval-after-load" code nil [5754 6023]) ("add-to-list" code nil [6024 6073]) ("remember" include nil nil nil [6074 6093]) ("add-hook" code nil [6094 6153]) ("define-key" code nil [6154 6207]) ("custom-set-variables" code nil [6208 7510]) ("org-remember-insinuate" code nil [7512 7536]) ("setq" code nil [7537 7575]) ("setq" code nil [7576 7640]) ("define-key" code nil [7641 7686]) ("setq" code nil [7688 7843]) ("setq" code nil [7844 7869]) ("load-file" code nil [7994 8032]) ("ascii" include nil nil nil [8033 8049]) ("load-file" code nil [8178 8234]) ("find-recursive" include nil nil nil [8235 8260]) ("add-to-list" code nil [8340 8395]) ("speedbar-frame-mode" function nil nil ((use-visible . t) (prototype . t)) "Popup a speedbar frame" nil [8396 8465]) ("speedbar-get-focus" function nil nil ((use-visible . t) (prototype . t)) "Jump to speedbar frame" nil [8466 8534]) ("define-key-after" code nil [8535 8654]) ("global-set-key" code nil [8655 8698]) ("setq" code nil [8792 8838]) ("setq" code nil [8839 8874]) ("setq" code nil [8889 8989]) ("load" code nil [8999 9016]) ("setq" code nil [9017 9067]) ("setq" code nil [9068 9099]) ("setq" code nil [9100 9132]) ("setq" code nil [9133 9166]) ("setq" code nil [9167 9195]) ("setq" code nil [9196 9238]) ("setq" code nil [9239 9272]) ("setq" code nil [9273 9324]) ("setq" code nil [9325 9382]) ("setq" code nil [9383 9463]) ("setq" code nil [9479 9528]) ("setq" code nil [9529 9578]) ("add-to-list" code nil [9774 9825]) ("bbdb" include nil nil nil [9826 9841]) ("bbdb-initialize" code nil [9842 9859]) ("load-file" code nil [9860 9911]) ("setq" code nil [9912 9958]) ("bbdb-xml-print" include nil nil nil [9959 9984]) ("setq" code nil [10072 10115]) ("add-to-list" code nil [10204 10247]) ("load" code nil [10248 10263]) ("add-to-list" code nil [10264 10324]) ("add-to-list" code nil [10404 10445]) ("psvn" include nil nil nil [10446 10461]) ("add-to-list" code nil [10541 10586]) ("boxquote" include nil nil nil [10587 10606]) ("add-to-list" code nil [10705 10751]) ("ruby-mode" function nil nil ((use-visible . t) (prototype . t)) "Major mode for ruby files" nil [10752 10815]) ("add-to-list" code nil [10816 10870]) ("add-to-list" code nil [10871 10930]) ("run-ruby" function nil nil ((prototype . t)) "Run an inferior Ruby process" nil [10942 11006]) ("inf-ruby-keys" function nil nil ((prototype . t)) "Set local key defs for inf-ruby in ruby-mode" nil [11007 11092]) ("add-hook" code nil [11093 11185]) ("ruby-electric" include nil nil nil [11202 11226]) ("setq" code nil [11235 11292]) ("rails" include nil nil nil [11293 11309]) ("load-file" code nil [11878 11935]) ("actionscript-mode" include nil nil nil [11936 11964]) ("add-to-list" code nil [11965 12029]) ("tramp" include nil nil nil [12190 12206]) ("custom-set-variables" code nil [12207 12426]))
    :unmatched-syntax 'nil
    )
   (semanticdb-table "windowsonly.el"
    :file "windowsonly.el"
    :pointmax 479
    :major-mode 'emacs-lisp-mode
    :tokens '(("global-set-key" code nil [479 479]) ("w32-restore_and_maximize-frame" function nil nil ((user-visible . t)) "Restore a minimized frame" nil [479 479]) ("if" code nil [479 479]))
    :unmatched-syntax 'nil
    )
   (semanticdb-table "package.el.bak"
    :file "package.el.bak"
    :pointmax 6673
    :major-mode 'emacs-lisp-mode
    :tokens '(("load-file" code nil [101 151]) ("color-theme" include nil nil nil [152 174]) ("color-theme-dark-blue" code nil [175 198]) ("xcscope" include nil nil nil [338 356]) ("setq" code nil [428 461]) ("doxymacs" include nil nil nil [463 482]) ("add-hook" code nil [483 528]) ("add-to-list" code nil [608 663]) ("speedbar-frame-mode" function nil nil ((use-visible . t) (prototype . t)) "Popup a speedbar frame" nil [664 733]) ("speedbar-get-focus" function nil nil ((use-visible . t) (prototype . t)) "Jump to speedbar frame" nil [734 802]) ("define-key-after" code nil [803 922]) ("global-set-key" code nil [923 966]) ("add-hook" code nil [997 1060]) ("add-hook" code nil [1088 1145]) ("add-to-list" code nil [1146 1193]) ("add-to-list" code nil [1194 1245]) ("setq" code nil [1246 1287]) ("semantic-load" include nil nil nil [1288 1312]) ("add-to-list" code nil [1319 1364]) ("ecb" include nil nil nil [1365 1379]) ("add-to-list" code nil [1500 1547]) ("dictionary-search" function nil nil ((use-visible . t) (prototype . t)) "Ask for a word and search it in all dictionaries" nil [1548 1645]) ("dictionary-match-words" function nil nil ((use-visible . t) (prototype . t)) "Ask for a word and search all matching words in the dictionaries" nil [1646 1764]) ("dictionary-lookup-definition" function nil nil ((use-visible . t) (prototype . t)) "Unconditionally lookup the word at point." nil [1765 1866]) ("dictionary" function nil nil ((use-visible . t) (prototype . t)) "Create a new dictionary buffer" nil [1867 1939]) ("dictionary-mouse-popup-matching-words" function nil nil ((use-visible . t) (prototype . t)) "Display entries matching the word at the cursor" nil [1940 2056]) ("dictionary-popup-matching-words" function nil nil ((use-visible . t) (prototype . t)) "Display entries matching the word at the point" nil [2057 2166]) ("dictionary-tooltip-mode" function nil nil ((use-visible . t) (prototype . t)) "Display tooltips for the current word" nil [2167 2259]) ("global-dictionary-tooltip-mode" function nil nil ((use-visible . t) (prototype . t)) "Enable/disable dictionary-tooltip-mode for all buffers" nil [2260 2376]) ("global-set-key" code nil [2393 2436]) ("global-set-key" code nil [2437 2485]) ("setq" code nil [2516 2552]) ("load-file" code nil [2633 2684]) ("my-c-mode-common-hook" function nil nil nil (c-set-offset (quote substatement-open) 0) nil [2711 2965]) ("add-hook" code nil [2966 3019]) ("my-csharp-mode-hook" function nil nil nil (progn (turn-on-font-lock) (auto-fill-mode) (setq tab-width 4) (define-key csharp-mode-map "	" (quote c-tab-indent-or-complete))) nil [3020 3188]) ("add-hook" code nil [3189 3238]) ("add-to-list" code nil [3319 3361]) ("load-file" code nil [3362 3405]) ("global-set-key" code nil [3406 3449]) ("global-set-key" code nil [3450 3497]) ("global-set-key" code nil [3498 3545]) ("global-set-key" code nil [3546 3595]) ("add-to-list" code nil [3676 3738]) ("yasnippet-bundle" include nil nil nil [3739 3766]) ("appt-activate" code nil [3847 3862]) ("setq" code nil [3863 3897]) ("setq" code nil [3931 3962]) ("setq" code nil [3963 3994]) ("setq" code nil [4076 4136]) ("org-install" include nil nil nil [4137 4159]) ("add-to-list" code nil [4224 4278]) ("define-key" code nil [4279 4326]) ("eval-after-load" code nil [4327 5184]) ("add-to-list" code nil [5186 5235]) ("remember" include nil nil nil [5236 5255]) ("add-hook" code nil [5256 5315]) ("define-key" code nil [5316 5369]) ("custom-set-variables" code nil [5370 6672]))
    :unmatched-syntax 'nil
    )
   (semanticdb-table "largepackage.el"
    :file "largepackage.el"
    :pointmax 747
    :major-mode 'emacs-lisp-mode
    :tokens '(("add-to-list" code nil [80 129]) ("add-to-list" code nil [130 183]) ("setq" code nil [184 227]) ("semantic-load" include nil nil nil [228 254]) ("add-to-list" code nil [288 335]) ("ecb" include nil nil nil [336 352]) ("ecb-autoloads" include nil nil nil [380 406]))
    :unmatched-syntax 'nil
    )
   (semanticdb-table "myemacs.el"
    :file "myemacs.el"
    :pointmax 18309
    :major-mode 'emacs-lisp-mode
    :tokens '(("load-file" code nil [1 39]) ("load-file" code nil [73 107]) ("load-file" code nil [111 149]) ("load-file" code nil [150 189]) ("load-file" code nil [226 257]) ("set-language-environment" code nil [337 381]) ("create-fontset-from-fontset-spec" code nil [482 594]) ("setq" code nil [595 833]) ("setq" code nil [913 947]) ("setq" code nil [965 997]) ("setq" code nil [1073 1123]) ("setq" code nil [1124 1182]) ("fset" code nil [1198 1227]) ("setq" code nil [1243 1264]) ("display-time-mode" code nil [1280 1301]) ("setq" code nil [1312 1345]) ("setq" code nil [1346 1380]) ("global-font-lock-mode" code nil [1381 1406]) ("show-paren-mode" code nil [1412 1431]) ("setq" code nil [1439 1466]) ("set-fill-column" code nil [1473 1494]) ("setq" code nil [1495 1539]) ("setq" code nil [1540 1588]) ("setq" code nil [1617 1646]) ("transient-mark-mode" code nil [1647 1670]) ("global-set-key" code nil [1748 1786]) ("global-set-key" code nil [1813 1862]) ("global-set-key" code nil [1880 1918]) ("desktop-save-mode" code nil [1929 1950]) ("setq" code nil [1965 1997]) ("thumbs" function nil nil ((use-visible . t) (prototype . t)) "Preview images in a directory." nil [2056 2118]) ("recentf" include nil nil nil [2247 2265]) ("recentf-mode" code nil [2266 2282]) ("recentf-open-files-compl" function nil nil nil (interactive) nil [2283 2674]) ("global-set-key" code nil [2675 2742]) ("global-set-key" code nil [2849 3012]) ("global-set-key" code nil [3040 3194]) ("global-set-key" code nil [3482 3522]) ("global-set-key" code nil [3535 3571]) ("global-set-key" code nil [3572 3610]) ("global-set-key" code nil [3611 3645]) ("global-set-key" code nil [3646 3699]) ("global-set-key" code nil [3716 3763]) ("add-hook" code nil [3905 3946]) ("add-hook" code nil [3947 3990]) ("global-set-key" code nil [3991 4038]) ("global-set-key" code nil [4118 4161]) ("setq" code nil [4226 4631]) ("define-skeleton" code nil [4744 4927]) ("define-abbrev-table" code nil [4928 5103]) ("define-abbrev-table" code nil [5104 5285]) ("my-auto-pair" function nil nil nil (interactive) nil [5439 6095]) ("add-hook" code nil [6096 6133]) ("add-hook" code nil [6134 6173]) ("add-hook" code nil [6221 6261]) ("my-simple-mode" function nil nil nil nil nil [6285 6338]) ("add-hook" code nil [6339 6378]) ("add-hook" code nil [6379 6420]) ("add-hook" code nil [6421 6463]) ("custom-set-variables" code nil [6543 8160]) ("custom-set-faces" code nil [8161 8400]) ("setq" code nil [8402 8879]) ("setq" code nil [8880 9050]) ("define-key" code nil [9173 9227]) ("my-tab-all" function nil ("beginning" "end") nil (interactive "r") nil [9271 9558]) ("global-set-key" code nil [9673 9719]) ("fset" code nil [9720 18309]))
    )
   (semanticdb-table "beta.el"
    :file "beta.el"
    :pointmax 986
    :major-mode 'emacs-lisp-mode
    :tokens '(("define-key" code nil [112 175]) ("my-region-eliminate" function nil ("beginning" "end") nil (interactive "r") nil [176 500]) ("define-key" code nil [614 673]) ("my-region-space" function nil ("beginning" "end") nil (interactive "r") nil [674 984]))
    )
   (semanticdb-table "programming.el"
    :file "programming.el"
    :pointmax 4895
    :major-mode 'emacs-lisp-mode
    :tokens '(("global-set-key" code nil [80 120]) ("my_indent_code" function nil nil nil (interactive) nil [134 734]) ("insert-c++-class-header" function nil nil ((user-visible . t)) "Inserts a C++ class header which conforms to Oacis standards." nil [814 1215]) ("insert-c++-class" function nil nil ((user-visible . t)) "Inserts a C++ class which conforms to Oacis standards." nil [1217 1698]) ("align-vars-buffer" function nil nil ((user-visible . t)) "Aligns c/c++ variable declaration names on the same column in this buffer." nil [2060 2348]) ("beginning-of-next-line" function nil nil ((user-visible . t)) "Moves cursor to the beginning of the next line, or nowhere if at end of the buffer" nil [2402 2596]) ("align-vars" function nil ("beg" "end") ((user-visible . t)) "Aligns c/c++ variable declaration names on the same column, with beginning and end taken from selected region." nil [2599 4815]))
    )
   )
  )
